---
layout: default
title: "Assessment: Hello Weather"
categories: notes
order: 0
---

# {{ page.title }}

### About the app

- _Hello Weather_, by Pop State Co
- Website: [helloweatherapp.com](http://helloweatherapp.com)

### Purpose

I will consider the app against the most fundamental principles of human interface design, and see whether improvements can be made.

* * *

Let us consider the main screen:

![](/assets/2017-06-14-hello-weather--main-screen.png){:style="width:375px"}

As a user I have essential questions that when resolved create a feeling that I understand the app; this feeling of understanding is something the app designer is wise to encourage.

The most essential questions I have are about the idea of 'place:'
<p dl/>
- Where am I?
- What can I find here?
- Where can I go?
- What can I find there?

And as soon as I begin to 'read' the screen before me, as my eye passes over every 'thing,' I have the question:
<p dl/>
- This that I'm looking at---what is it trying to tell me?
<p dl/>
So, when I begin to 'read' the main screen (_ie_ the one shown above), I realize by the clues in the content that I am looking at a weather report. I realize that from *the content*. Supposing my eyesight to be diminished, my ability to identify the content before me as a weather report would also be diminished. Have a look:

![](/assets/2017-06-14-hello-weather--main-screen-blurry.jpg){:style="max-width:375px"}

Thus the app is unusable by those with diminished eyesight, and for those who prefer larger text sizes, the app provides a compromised experience. So, looking for a way to improve the app, we have found that **the app should implement Dynamic Type**.

What do I mean that the app should implement Dynamic Type? --- Dynamic Type is a feature of iOS (_ie_ of iPhone and iPad); it provides a device-wide text size setting, and apps can choose to implement that setting, _ie_ to be responsive to it.

If this app implemented Dynamic Type, it would mean that I could set my preferred text size for my iPhone to be quite large if I wanted, and all the text in the app would reflect that preference.

An aside: Let us consider what it means to design with integrity. A first principle must be to respect the user. And in this case that means respecting that she may have her own reasons for her text size preference. Suppose she pilots a helicopter, during which activity she can only afford quick glances at her iPhone; she may set her Dynamic Type setting to be the largest, so that she could use all her apps with huge text sizes. In this scenario, _Hello Weather_ is not an app she would be able to use. ...But did you notice how I structured that sentiment? I made it seem that she had a very good reason for her preference of a large text size. I could have instead used an example of someone with impaired vision, or with dyslexia; so that you would feel that these users, too, had a good reason for their preferences.

Continuing my aside: I am led to touch on what I consider to be a blind spot in our culture, and it pervades design, too: we do not respect people's preferences until we understand them ourselves. I mean, until we understand the preferences. (I could phrase it more simply---_We do not respect people until we understand them_---and perhaps provoke your thinking about what may be the principal challenge in our society.) ...This is a *huge* problem. We should simply say: First, we respect the user; Therefore, all she prefers is sacred, no matter the reason.

Returning to our assessment: as a user I now have a good sense of where I am in the app---I am looking at a weather report---, and as I 'read' the interface I wonder where I may go, and I continue in building my understanding of what this app is and how it is to be used.

* * *

Next, I distinguish the content---_ie_ the weather report---from what else there is; and I 'read' this 'what else'---which I find to be concentrated in the top matter---to see what it is trying to tell me. Here is the top matter:

![](/assets/2017-06-14-hello-weather--main-screen-top-matter.png){:style="max-width:375px"}

And I try to understand the meaning of the following three things, the 'left symbol,' the 'title,' and the 'right symbol:'

![](/assets/2017-06-14-hello-weather--main-screen-top-matter-left-symbol.png){:style="max-width:40px"} &nbsp;
![](/assets/2017-06-14-hello-weather--main-screen-top-matter-title.png){:style="max-width:200px"} &nbsp;
![](/assets/2017-06-14-hello-weather--main-screen-top-matter-right-symbol.png){:style="max-width:22px"}

The left symbol appears to be a button. When I tap it, I navigate to a new screen in the app, which we will call the locations screen (only the top half of the screen is shown):

![](/assets/2017-06-14-hello-weather--locations-screen.png){:style="max-width:375px"}

Before we consider what is on this the locations screen, let me take a moment to talk about how the screen appeared: it slid in from the right. A screen sliding in from the right is a strong convention in iOS: it suggests a hierarchy, and a sliding-in from the right suggests going deeper. The back button we can see in the locations screen is certainly a conventional element; it is conventionally understood that tapping the back button navigates a level higher in the hierarchy.

But why do I mention these things about how the locations screen appears? Because I am pointing out a dysfluency created by this app's behaviour, as compared with convention. The dysfluency has two parts: first, there is a strong convention that tapping a button in the top left corner of the screen navigates *up* the app hierarchy (and not *down* it, as happens here).

The second dysfluency is this: if we are looking at the main screen, we are looking at the weather report for a particular location. If we wanted to change the location, it makes sense that we'd navigate *up* the app's hierarchy, not *down*. _Ie_ it makes sense that to go from 'this particular location' to 'no particular location' is a move from a more-specific to a less-specific state, which in hierarchies corresponds to a movement *up* to a higher level.

So, having considered all this, let us now declare that **going from a particular location to the list of locations should be represented as navigating *up* the app hierarchy, not down it**.

And pursuant to my question as a user of, Where can I go?, I now know I can go to a screen where I can view a number of locations (and where presumably I can choose a new location from the list, and I can add new locations to the list).

* * *

Continuing to 'read' the top matter, I believe the right symbol to resemble a gear, which I conventionally understand to denote 'settings,' and when I tap the button, the title of the screen that comes up---"Hello Settings"---confirms my suspicion. We do not need to look at the settings screen.

But let us consider the top matter once more. Let us see it again:

![](/assets/2017-06-14-hello-weather--main-screen-top-matter.png){:style="max-width:375px"}

It looks like there is a title---here it says, "West Vancouver, BC, Canada"---and a left and right button. Let's call the left and right buttons the locations and settings buttons. If I am to understand the app, I need to know the answers to these questions:
<p dl/>
- Why is the locations button bigger than the settings button?
- Why does the locations button straddle the title area and the content area, but the settings button is constrained within the title area?

I cannot find satisfactory answers to these questions. As a user, if I find symbols to be arranged according to some deliberate way that I do not understand, I will feel like the app is less understandable; and therefore I will find the app less pleasing to use.

But before recommending making the buttons consistently sized and arranged; we must firstly remember that we already mentioned that the top left placement of the locations button is dysfluent, and we must secondly inquire whether it be necessary that both the locations and settings buttons be on-screen. A further challenge in having a settings button an an app's screen is that the button suggests the question: the settings for *what*? For the *app*, or for *this place in the app?* In this app the settings pertain to the app, not the particular location, and so we can recommend: **the settings screen should be invoked from the highest level in the app hierarchy**.

Round out our recommendations:
<p dl/>
- **The settings button should be removed from the main screen**.
- **The locations button should be replaced by the conventional back chevron**.
- **The app hierarchy should have two levels: level 'zero,' where a location can be chosen, and the list of locations can be managed, and the settings screen can be invoked. And level 'one,' showing the weather for the chosen location.**

* * *

And so our assessment draws to a close. We have considered only the most fundamental human interface design principles. We have looked at an elegant contemporary app and we have seen how even something so simple yields opportunities that may be improved.

My hope in writing this is to instill, in all those who are interested, a deeper understanding of human interface design. This is also a sample of what a quick design assessment from Radicle looks like. Our mission at Radicle is to improve design across the industry, so that we can make users happier. We appreciate your attention, as well as your support in this endeavour that affects us all so closely.

<hr asterism>
